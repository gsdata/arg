<?php 

function arg_sesiune_node_info() {
	return array(
			'arg_sesiune' => array(
					'name' => t('Sesiune'),
					'base' => 'arg_sesiune',
					'description' => t('Folositi acest tip de continut pentru a adauga o sesiune noua.'),
					'has_title' => TRUE,
					'title_label' => 'Sesiune',
					'help' => t('Introduceti perioada de desfasurare a sesiunii.'),
			),
	);

}
function arg_sesiune_form($node, $form_state){

	return node_content_form($node, $form_state);

}

function arg_sesiune_form_alter(&$form, &$form_state,$form_id){
	$form['bursa']['#access']=false;
  $form['stare']['#access']=false;
	
  $form['stare']['und'][0]['rgb']['#default_value'] = '#00ff00';
  
	if($_GET['nid-bursa'] && $form_id == 'arg_sesiune_node_form'){
		$form['bursa']['und'][0]['value']['#default_value'] = $_GET['nid-bursa'];
	}
}

function arg_sesiune_arg_core_butoane($nid,$type,$node){
	$acum = time();
  $ok = $acum > $node['entity']->perioada['und'][0]['value'] && $acum < $node['entity']->perioada['und'][0]['value2'];
	if($type == 'arg_sesiune' && $ok){
	  if(user_access('adauga aplicatie')){
			$options['query'] = array(
					'nid-sesiune' => $node['entity']->nid,
				);
				$output = l('Aplica','node/add/arg-aplicatie',$options);
			return $output;
		}
	}
}

function arg_sesiune_arg_core_referinta_univ($nid, $type, $node){

	$nod_bursa = node_load($node['entity']->bursa['und'][0]['value']);
	$output = l($nod_bursa->title, 'node/' . $nod_bursa->nid);
	return $output;
}

function arg_sesiune_permission(){
	return array(
			'adauga sesiune' => array(
					'title' => 'Adauga sesiune',
					'description' => 'Ofera posibilitatea de a adauga o sesiune'
					),
			'update sesiune' => array(
					'title' => 'Update sesiune',
					'description' => 'Ofera posibilitatea de a edita o sesiune'
					),
			'delete sesiune' => array(
					'title' => 'Delete sesiune',
					'description' => 'Ofera posibilitatea de a sterge o  sesiune'
					),
			);
}

function arg_sesiune_node_access($node, $op, $account){
	$type = is_string($node) ? $node : $node->type;
	if($type == 'arg_sesiune'){
		switch ($op){
			case 'create':
				if(user_access('adauga sesiune',$account)){
					//Dreptul de a deschide o sesiune depinde de bursa la care se deschide.
					if($_GET['nid-bursa']){
						$nid = $_GET['nid-bursa'];
					} else {
						$nid = -1;
					}
					$query = "SELECT uid FROM {arg_utilizator_drepturi} WHERE uid=:uid AND nid=:nid AND drept='create'";
					$result = db_query($query,array(':uid' => $account->uid, ':nid' => $nid))->fetchField();
					if($result == $account->uid){
						return NODE_ACCESS_ALLOW;
					}
				}
			case 'update':
				if(user_access('update sesiune',$account)){
					$query = "SELECT uid FROM {arg_utilizator_drepturi} WHERE uid=:uid AND nid=:nid AND drept='edit'";
					$result = db_query($query,array(':uid' => $account->uid, ':nid' => $node->nid))->fetchField();
					if($result == $account->uid){
						return NODE_ACCESS_ALLOW;
					}
				}
			case 'delete':
				if(user_access('delete sesiune',$account)){
					return NODE_ACCESS_ALLOW;
				}
		}
	}
}

function arg_sesiune_node_view($node, $view_mode){
	
	$n = node_load($node->nid);
	$acum = time();
	if($acum < $n->perioada['und'][0]['value'] || $acum >$n->perioada['und'][0]['value2'] ){
		$n->stare['und'][0]['rgb'] = '#ff0000';
	}
	node_save($n);
}